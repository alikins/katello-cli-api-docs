MODULE NAME
    cli_test_utils


CLASSES

    class CLITestCase(unittest.TestCase)


        mock_from_module(self, property_name, return_value=None)

        mock(self, obj, property_name, return_value=None)

        restore_mocks(self)

        set_action(self, action)

        set_module(self, module)

        tearDown(self)
            Hook method for deconstructing the test fixture after testing
            it.

        Class variables

            _mocked_props = {}

            action = None

            module = None

        Inherited methods
            unittest.TestCase.__call__(self, *args, **kwds)
            unittest.TestCase.__eq__(self, other)
            unittest.TestCase.__hash__(self)
            unittest.TestCase.__init__(self, methodName='runTest')
            unittest.TestCase.__ne__(self, other)
            unittest.TestCase.__repr__(self)
            unittest.TestCase.__str__(self)
            unittest.TestCase._exc_info(self)
            unittest.TestCase.assertAlmostEqual(self, first, second, places=7, msg=None)
            unittest.TestCase.assertAlmostEquals(self, first, second, places=7, msg=None)
            unittest.TestCase.assertEqual(self, first, second, msg=None)
            unittest.TestCase.assertEquals(self, first, second, msg=None)
            unittest.TestCase.assertFalse(self, expr, msg=None)
            unittest.TestCase.assertNotAlmostEqual(self, first, second, places=7, msg=None)
            unittest.TestCase.assertNotAlmostEquals(self, first, second, places=7, msg=None)
            unittest.TestCase.assertNotEqual(self, first, second, msg=None)
            unittest.TestCase.assertNotEquals(self, first, second, msg=None)
            unittest.TestCase.assertRaises(self, excClass, callableObj, *args, **kwargs)
            unittest.TestCase.assertTrue(self, expr, msg=None)
            unittest.TestCase.assert_(self, expr, msg=None)
            unittest.TestCase.countTestCases(self)
            unittest.TestCase.debug(self)
            unittest.TestCase.defaultTestResult(self)
            unittest.TestCase.fail(self, msg=None)
            unittest.TestCase.failIf(self, expr, msg=None)
            unittest.TestCase.failIfAlmostEqual(self, first, second, places=7, msg=None)
            unittest.TestCase.failIfEqual(self, first, second, msg=None)
            unittest.TestCase.failUnless(self, expr, msg=None)
            unittest.TestCase.failUnlessAlmostEqual(self, first, second, places=7, msg=None)
            unittest.TestCase.failUnlessEqual(self, first, second, msg=None)
            unittest.TestCase.failUnlessRaises(self, excClass, callableObj, *args, **kwargs)
            unittest.TestCase.id(self)
            unittest.TestCase.run(self, result=None)
            unittest.TestCase.setUp(self)
            unittest.TestCase.shortDescription(self)

        Inherited nested classes
            class unittest.TestCase.failureException(StandardError)

    class CLIOptionTestCase(CLITestCase)


        mock_options(self)

        mocked_get_option(self, opt, default=None)

        Inherited methods
            unittest.TestCase.__call__(self, *args, **kwds)
            unittest.TestCase.__eq__(self, other)
            unittest.TestCase.__hash__(self)
            unittest.TestCase.__init__(self, methodName='runTest')
            unittest.TestCase.__ne__(self, other)
            unittest.TestCase.__repr__(self)
            unittest.TestCase.__str__(self)
            unittest.TestCase._exc_info(self)
            unittest.TestCase.assertAlmostEqual(self, first, second, places=7, msg=None)
            unittest.TestCase.assertAlmostEquals(self, first, second, places=7, msg=None)
            unittest.TestCase.assertEqual(self, first, second, msg=None)
            unittest.TestCase.assertEquals(self, first, second, msg=None)
            unittest.TestCase.assertFalse(self, expr, msg=None)
            unittest.TestCase.assertNotAlmostEqual(self, first, second, places=7, msg=None)
            unittest.TestCase.assertNotAlmostEquals(self, first, second, places=7, msg=None)
            unittest.TestCase.assertNotEqual(self, first, second, msg=None)
            unittest.TestCase.assertNotEquals(self, first, second, msg=None)
            unittest.TestCase.assertRaises(self, excClass, callableObj, *args, **kwargs)
            unittest.TestCase.assertTrue(self, expr, msg=None)
            unittest.TestCase.assert_(self, expr, msg=None)
            unittest.TestCase.countTestCases(self)
            unittest.TestCase.debug(self)
            unittest.TestCase.defaultTestResult(self)
            unittest.TestCase.fail(self, msg=None)
            unittest.TestCase.failIf(self, expr, msg=None)
            unittest.TestCase.failIfAlmostEqual(self, first, second, places=7, msg=None)
            unittest.TestCase.failIfEqual(self, first, second, msg=None)
            unittest.TestCase.failUnless(self, expr, msg=None)
            unittest.TestCase.failUnlessAlmostEqual(self, first, second, places=7, msg=None)
            unittest.TestCase.failUnlessEqual(self, first, second, msg=None)
            unittest.TestCase.failUnlessRaises(self, excClass, callableObj, *args, **kwargs)
            unittest.TestCase.id(self)
            cli_test_utils.CLITestCase.mock(self, obj, property_name, return_value=None)
            cli_test_utils.CLITestCase.mock_from_module(self, property_name, return_value=None)
            cli_test_utils.CLITestCase.restore_mocks(self)
            unittest.TestCase.run(self, result=None)
            unittest.TestCase.setUp(self)
            cli_test_utils.CLITestCase.set_action(self, action)
            cli_test_utils.CLITestCase.set_module(self, module)
            unittest.TestCase.shortDescription(self)
            cli_test_utils.CLITestCase.tearDown(self)

        Inherited class variables
            cli_test_utils.CLITestCase._mocked_props = {}
            cli_test_utils.CLITestCase.action = None
            cli_test_utils.CLITestCase.module = None

        Inherited nested classes
            class unittest.TestCase.failureException(StandardError)

    class CLIActionTestCase(CLITestCase)


        mock_printer(self)

        mock_options(self, options)

        mocked_get_option(self, opt, default=None)

        mock_spinner(self)

        Class variables

            _options = {}

        Inherited methods
            unittest.TestCase.__call__(self, *args, **kwds)
            unittest.TestCase.__eq__(self, other)
            unittest.TestCase.__hash__(self)
            unittest.TestCase.__init__(self, methodName='runTest')
            unittest.TestCase.__ne__(self, other)
            unittest.TestCase.__repr__(self)
            unittest.TestCase.__str__(self)
            unittest.TestCase._exc_info(self)
            unittest.TestCase.assertAlmostEqual(self, first, second, places=7, msg=None)
            unittest.TestCase.assertAlmostEquals(self, first, second, places=7, msg=None)
            unittest.TestCase.assertEqual(self, first, second, msg=None)
            unittest.TestCase.assertEquals(self, first, second, msg=None)
            unittest.TestCase.assertFalse(self, expr, msg=None)
            unittest.TestCase.assertNotAlmostEqual(self, first, second, places=7, msg=None)
            unittest.TestCase.assertNotAlmostEquals(self, first, second, places=7, msg=None)
            unittest.TestCase.assertNotEqual(self, first, second, msg=None)
            unittest.TestCase.assertNotEquals(self, first, second, msg=None)
            unittest.TestCase.assertRaises(self, excClass, callableObj, *args, **kwargs)
            unittest.TestCase.assertTrue(self, expr, msg=None)
            unittest.TestCase.assert_(self, expr, msg=None)
            unittest.TestCase.countTestCases(self)
            unittest.TestCase.debug(self)
            unittest.TestCase.defaultTestResult(self)
            unittest.TestCase.fail(self, msg=None)
            unittest.TestCase.failIf(self, expr, msg=None)
            unittest.TestCase.failIfAlmostEqual(self, first, second, places=7, msg=None)
            unittest.TestCase.failIfEqual(self, first, second, msg=None)
            unittest.TestCase.failUnless(self, expr, msg=None)
            unittest.TestCase.failUnlessAlmostEqual(self, first, second, places=7, msg=None)
            unittest.TestCase.failUnlessEqual(self, first, second, msg=None)
            unittest.TestCase.failUnlessRaises(self, excClass, callableObj, *args, **kwargs)
            unittest.TestCase.id(self)
            cli_test_utils.CLITestCase.mock(self, obj, property_name, return_value=None)
            cli_test_utils.CLITestCase.mock_from_module(self, property_name, return_value=None)
            cli_test_utils.CLITestCase.restore_mocks(self)
            unittest.TestCase.run(self, result=None)
            unittest.TestCase.setUp(self)
            cli_test_utils.CLITestCase.set_action(self, action)
            cli_test_utils.CLITestCase.set_module(self, module)
            unittest.TestCase.shortDescription(self)
            cli_test_utils.CLITestCase.tearDown(self)

        Inherited class variables
            cli_test_utils.CLITestCase._mocked_props = {}
            cli_test_utils.CLITestCase.action = None
            cli_test_utils.CLITestCase.module = None

        Inherited nested classes
            class unittest.TestCase.failureException(StandardError)
