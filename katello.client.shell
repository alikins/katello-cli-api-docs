MODULE NAME
    katello.client.shell


CLASSES

    class KatelloShell(cmd.Cmd)


        __init__(self, admin_cli)
            Instantiate a line-oriented interpreter framework.

            The optional argument 'completekey' is the readline name of a
            completion key; it defaults to the Tab key. If completekey is
            not None and the readline module is available, command
            completion is done automatically. The optional arguments stdin
            and stdout specify alternate input and output file objects; if
            not specified, sys.stdin and sys.stdout are used.

        do_quit(self, args)

        do_exit(self, args)

        precmd(self, line)
            Hook method executed just before the command line is
            interpreted, but after the input prompt is generated and
            issued.

        parseline(self, line)
            Parse the line into a command name and a string containing the
            arguments.  Returns a tuple containing (command, args, line).
            'command' and 'args' may be None if the line couldn't be
            parsed.

        postcmd(self, stop, line)
            Hook method executed just after a command dispatch is finished.

        do_help(self, strArgs)

        completeparams(self, text, line, *ignored)

        completecommands(self, text, line, *ignored)

        completenames(self, text, *ignored)

        complete(self, text, state)
            Return the next possible completion for 'text'.

            If a command has not been entered, then complete against
            command list. Otherwise try to call complete_<command> to get
            list of completions.

        remove_last_history_item(self)

        Class variables

            HISTORY_LENGTH = 1024

            cmdqueue = []

            completekey = 'tab'

            stdout = sys.stdout

            current_line = ''

            emptyline = lambda self:

        Inherited methods
            cmd.Cmd.cmdloop(self, intro=None)
            cmd.Cmd.columnize(self, list, displaywidth=80)
            cmd.Cmd.complete_help(self, *args)
            cmd.Cmd.completedefault(self, *ignored)
            cmd.Cmd.default(self, line)
            cmd.Cmd.get_names(self)
            cmd.Cmd.onecmd(self, line)
            cmd.Cmd.postloop(self)
            cmd.Cmd.preloop(self)
            cmd.Cmd.print_topics(self, header, cmds, cmdlen, maxcol)

        Inherited class variables
            cmd.Cmd.doc_header = "Documented commands (type help <topic>):"
            cmd.Cmd.doc_leader = ""
            cmd.Cmd.identchars = string.ascii_letters+ string.digits+ '_'
            cmd.Cmd.intro = None
            cmd.Cmd.lastcmd = ''
            cmd.Cmd.misc_header = "Miscellaneous help topics:"
            cmd.Cmd.nohelp = "*** No help on %s"
            cmd.Cmd.prompt = '(Cmd) '
            cmd.Cmd.ruler = '='
            cmd.Cmd.undoc_header = "Undocumented commands:"
            cmd.Cmd.use_rawinput = 1
